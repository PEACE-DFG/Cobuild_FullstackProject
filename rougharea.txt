  <div class="seal">
            <svg class="seal-inner" viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg">
                <!-- Outer circle -->
                <circle cx="100" cy="100" r="90" fill="none" stroke="#daa520" stroke-width="2"/>
                <circle cx="100" cy="100" r="85" fill="none" stroke="#1a365d" stroke-width="1"/>
                
                <!-- Inner decorative elements -->
                <path d="M100 15 A85 85 0 0 1 100 185 A85 85 0 0 1 100 15" fill="none" stroke="#daa520" stroke-width="1"/>
                <path d="M15 100 A85 85 0 0 1 185 100 A85 85 0 0 1 15 100" fill="none" stroke="#daa520" stroke-width="1"/>
                
                <!-- Center text -->
                <text x="100" y="85" text-anchor="middle" font-family="Cormorant Garamond" font-size="24" fill="#1a365d">COBUILD</text>
                <text x="100" y="115" text-anchor="middle" font-family="Montserrat" font-size="12" fill="#1a365d">OFFICIAL SEAL</text>
                
                <!-- Decorative stars -->
                <path d="M100 30 L102 25 L100 20 L98 25 Z" fill="#daa520"/>
                <path d="M100 170 L102 175 L100 180 L98 175 Z" fill="#daa520"/>
                <path d="M30 100 L25 102 L20 100 L25 98 Z" fill="#daa520"/>
                <path d="M170 100 L175 102 L180 100 L175 98 Z" fill="#daa520"/>
            </svg>
        </div>

        <?php
// process_investment_intention.php
use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\Exception;
use Dompdf\Dompdf;

include '../../../../database/db.php';
require '../PHPMailer/src/PHPMailer.php';
require '../PHPMailer/src/Exception.php';
require '../PHPMailer/src/SMTP.php';
require '../../../../vendor/autoload.php';

session_start();

if (!isset($_SESSION['user_id'])) {
    echo json_encode(['success' => false, 'message' => 'User not logged in']);
    exit;
}

// Verify user is an investor
$stmt = $conn->prepare("SELECT user_type, name, email FROM users WHERE id = ?");
$stmt->bind_param("i", $_SESSION['user_id']);
$stmt->execute();
$result = $stmt->get_result();
$user = $result->fetch_assoc();

if ($user['user_type'] !== 'investor') {
    echo json_encode(['success' => false, 'message' => 'Only investors can make investment intentions']);
    exit;
}

// Validate input
if (!isset($_POST['project_id']) || !isset($_POST['investment_type'])) {
    echo json_encode(['success' => false, 'message' => 'Invalid input']);
    exit;
}

$user_id = $_SESSION['user_id'];
$project_id = intval($_POST['project_id']);
$investment_type = $_POST['investment_type'];
$investment_details = $_POST['investment_details'] ?? null;
$amount = $_POST['amount'] ?? null;
$hours = $_POST['hours'] ?? null;

// Generate certificate number
$certificate_number = 'CB-' . date('Y') . '-' . str_pad(mt_rand(1, 99999), 5, '0', STR_PAD_LEFT);
$created_date = date('Y-m-d H:i:s');

$conn->begin_transaction();

try {
    // Get project information
    $stmt = $conn->prepare("
        SELECT 
            p.title as project_name,
            p.description as project_description,
            u.email as developer_email,
            GROUP_CONCAT(DISTINCT ps.skill_type) as skills,
            GROUP_CONCAT(DISTINCT pserv.service_type) as services
        FROM projects p 
        JOIN users u ON p.builder_id = u.id 
        LEFT JOIN project_skills ps ON p.id = ps.project_id
        LEFT JOIN project_services pserv ON p.id = pserv.project_id
        WHERE p.id = ? AND u.user_type = 'developer'
        GROUP BY p.id
    ");
    $stmt->bind_param("i", $project_id);
    $stmt->execute();
    $result = $stmt->get_result();
    $project = $result->fetch_assoc();

    if (!$project) {
        throw new Exception('Project not found or the associated user is not a developer');
    }

    // Insert investment intention
    $stmt = $conn->prepare("
        INSERT INTO investment_intentions (
            user_id, 
            project_id, 
            investment_type, 
            amount,
            hours,
            status,
            certificate_number,
            created_at
        ) VALUES (?, ?, ?, ?, ?, 'pending', ?, ?)
    ");

    $stmt->bind_param("iisdiss", 
        $user_id, 
        $project_id, 
        $investment_type, 
        $amount, 
        $hours,
        $certificate_number,
        $created_date
    );
    $stmt->execute();

    // Format investment details for certificate
    $formatted_investment_details = "";
    if ($investment_type === 'financial') {
        $formatted_investment_details = "Financial Investment: $" . number_format($amount, 2);
    } elseif ($investment_type === 'skills') {
        $formatted_investment_details = "Time Investment: " . $hours . " hours";
    }

    // Format skills and services for certificate
    $skills_services_text = "";
    if (!empty($project['skills'])) {
        $skills_services_text .= $project['skills'];
    }
    if (!empty($project['services'])) {
        if (!empty($skills_services_text)) {
            $skills_services_text .= ", ";
        }
        $skills_services_text .= $project['services'];
    }

    // Prepare email content for developer
    $developerEmailContent = "
        <h2>New Investment Intention</h2>
        <p><strong>Project Name:</strong> {$project['project_name']}</p>
        <p><strong>Investor Name:</strong> {$user['name']}</p>
        <p><strong>Investment Type:</strong> {$investment_type}</p>
        <p><strong>Certificate Number:</strong> {$certificate_number}</p>
        
        <h3>Project Skills/Services</h3>
        <p>{$skills_services_text}</p>
        
        <p><strong>Investment Details:</strong> {$formatted_investment_details}</p>
    ";

    // Generate Certificate
    $certificate_path = __DIR__ . "/../../../../certificates/investment_certificate_" . time() . ".pdf";
    
    // Create PDF using DOMPDF
    $dompdf = new Dompdf();
    $options = $dompdf->getOptions();
    $options->set('isHtml5ParserEnabled', true);
    $options->set('isCssFloatEnabled', true);
    $dompdf->setOptions($options);

    // Get certificate template
    $certificate_html = file_get_contents('../../../Certificates/certificate_of_investment.php');
    
    // Replace placeholders
    $certificate_html = str_replace(
        [
            '{{INVESTOR_NAME}}', 
            '{{PROJECT_NAME}}', 
            '{{SKILLS_SERVICES}}',
            '{{INVESTMENT_DETAILS}}', 
            '{{DATE}}',
            '{{CERTIFICATE_ID}}'
        ],
        [
            $user['name'], 
            $project['project_name'], 
            $skills_services_text,
            $formatted_investment_details,
            date('F d, Y', strtotime($created_date)),
            $certificate_number
        ],
        $certificate_html
    );

    $dompdf->loadHtml($certificate_html);
    $dompdf->setPaper('A4', 'landscape');
    $dompdf->render();
    
    file_put_contents($certificate_path, $dompdf->output());

    // Send notification to developer
    if (!empty($project['developer_email'])) {
        send_notification_email(
            $project['developer_email'], 
            'New Investment Intention', 
            $developerEmailContent
        );
    }

    // Send certificate to investor
    send_notification_email(
        $user['email'], 
        'Certificate of Investment Intention', 
        "Thank you for your investment intention in {$project['project_name']}. Your certificate number is {$certificate_number}. Please find your certificate attached.",
        $certificate_path
    );

    $conn->commit();
    echo json_encode([
        'success' => true, 
        'message' => 'Investment intention submitted successfully',
        'certificate_number' => $certificate_number
    ]);
} catch (Exception $e) {
    $conn->rollback();
    echo json_encode(['success' => false, 'message' => $e->getMessage()]);
}

function send_notification_email($to, $subject, $message, $attachment = null) {
    $mail = new PHPMailer(true);

    try {
        // Server settings
        $mail->isSMTP();
        $mail->Host       = 'smtp.gmail.com';
        $mail->SMTPAuth   = true;
        $mail->Username   = 'Officialcobuild@gmail.com';
        $mail->Password   = 'udodjurhumdfrsim';
        $mail->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
        $mail->Port       = 587;

        // Recipients
        $mail->setFrom('Officialcobuild@gmail.com', 'Cobuild');
        $mail->addAddress($to);

        // Attachments
        if ($attachment) {
            $mail->addAttachment($attachment);
        }

        // Content
        $mail->isHTML(true);
        $mail->Subject = $subject;
        $mail->Body    = $message;

        $mail->send();
    } catch (Exception $e) {
        throw new Exception("Email could not be sent. Mailer Error: {$mail->ErrorInfo}");
    }
}
?>